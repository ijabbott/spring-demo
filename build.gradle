buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id "com.commercehub.cucumber-jvm" version "0.14"
    id 'com.palantir.docker' version '0.20.1'
    id 'com.avast.gradle.docker-compose' version "0.8.12"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

wrapper {
    gradleVersion = '4.9'
}

version = "0.1-SNAPSHOT"
group = "com.pillar"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

String integrationTestBaseUrl = "http://localhost:8080"

addCucumberSuite 'cucumberTest'
cucumberTest {
    stepDefinitionRoots = ['com.pillar']
    tags = ["not @wip"]
    systemProperties = [
            "unit-endpoint": integrationTestBaseUrl
    ]
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    cucumberTestCompile 'io.cucumber:cucumber-java:4.2.0'
    cucumberTestCompile 'io.cucumber:cucumber-junit:4.2.0'
}

docker {
    name "${project.group}/${bootJar.baseName}"
    files bootJar.outputs.files, file('src/main/scripts/wait-for.sh')
    buildArgs([JAR_FILE: bootJar.archiveName])
    dockerfile project.file('src/main/scripts/Dockerfile')
}

dockerCompose {
    mongodb {
        startedServices = ['mongodb']
    }
}

tasks.composeUp.dependsOn('docker')

task mongoSetup(dependsOn: 'composeUp') {}
task mongoTeardown(dependsOn: 'composeDown') {}

cucumberTest.dependsOn('mongoSetup')
cucumberTest.finalizedBy('mongoTeardown')

check.dependsOn tasks.cucumberTest




