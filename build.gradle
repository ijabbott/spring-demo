buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'com.palantir.docker' version '0.20.1'
    id 'com.avast.gradle.docker-compose' version "0.8.12"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

wrapper {
    gradleVersion = '4.9'
}

version = "0.1-SNAPSHOT"
group = "com.pillar"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

docker {
    name "${project.group}/${bootJar.baseName}"
    files bootJar.outputs.files, file('src/main/scripts/wait-for.sh')
    buildArgs([JAR_FILE: bootJar.archiveName])
    dockerfile project.file('src/main/scripts/Dockerfile')
}

dockerCompose {
    mongodb {
        startedServices = ['mongodb']
    }
}

tasks.composeUp.dependsOn('docker')

task mongoSetup(dependsOn: 'composeUp') {}
task mongoTeardown(dependsOn: 'composeDown') {}




